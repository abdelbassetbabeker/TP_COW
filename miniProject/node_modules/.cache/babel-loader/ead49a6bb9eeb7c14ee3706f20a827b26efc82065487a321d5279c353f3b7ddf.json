{"ast":null,"code":"var _jsxFileName = \"/home/basst/Desktop/learn_git_again/TP_COW/miniProject/src/Blogs/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = _ref => {\n  _s();\n  let {\n    data,\n    header,\n    setBlogs\n  } = _ref;\n  const [comment, setcomment] = useState('');\n  const handelReplay = (e, index) => {\n    data[index].comments.push(comment);\n    setBlogs(prev => [...prev]);\n    document.getElementsByName('comment')[index].value = '';\n    setcomment('');\n  };\n  const handelLikes = (e, index) => {\n    data[index].likes = data[index].likes + 1;\n    setBlogs(prev => [...prev]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data === null || data === void 0 ? void 0 : data.map((item, index) => {\n      var _item$comments;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: item.subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: item.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.discription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Likes \", item.likes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: e => handelLikes(e, index),\n              children: \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"comment\",\n              onChange: e => setcomment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: e => handelReplay(e, index),\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Comments \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), (_item$comments = item.comments) === null || _item$comments === void 0 ? void 0 : _item$comments.map((m, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: m\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"m4kXYeCoTrGegBEq3JiTCdotCK4=\");\n_c = Post;\nexport default Post;\n\n// import React from 'react';\n// import './style.css'\n\n// const Table = ({ data, header }) => {\n\n//     return (\n//         <div>\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         {header.map((title, index) => (\n//                             <th key={index}>{title}</th>\n//                         ))}\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {data.map((item, idex) =>\n//                         <tr key={idex}>\n//                             <td>{item.subject}</td>\n//                             <td>{item.discription}</td>\n//                             <td>{item.date}</td>\n//                         </tr>\n//                     )}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// }\n\n// export default Table;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","Post","data","header","setBlogs","comment","setcomment","handelReplay","e","index","comments","push","prev","document","getElementsByName","value","handelLikes","likes","map","item","subject","date","discription","target","m","i"],"sources":["/home/basst/Desktop/learn_git_again/TP_COW/miniProject/src/Blogs/Post.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './post.css'\n\nconst Post = ({ data, header, setBlogs }) => {\n\n    const [comment, setcomment] = useState('');\n\n    const handelReplay = (e, index) => {\n        data[index].comments.push(comment)\n        setBlogs((prev) => ([...prev]))\n        document.getElementsByName('comment')[index].value = ''\n        setcomment('')\n    }\n    const handelLikes = (e, index) => {\n        data[index].likes = data[index].likes + 1\n        setBlogs((prev) => ([...prev]))\n\n    }\n\n\n\n    return (\n        <div>\n            {data?.map((item, index) =>\n                <div key={index} >\n                    <div className='post'>\n                        <div className='title'>\n                            <h2>{item.subject}</h2>\n                            <h5>{item.date}</h5>\n                        </div>\n                        <p>{item.discription}</p>\n                        <div>\n                            <h3>Likes {item.likes}</h3>\n                            <br />\n                            <button className='btn' onClick={(e) => handelLikes(e, index)}>Like</button>\n                        </div>\n                        <br />\n                        <div className='comment'>\n                            <input type=\"text\" name='comment' onChange={(e) => setcomment(e.target.value)} />\n                            <button className='btn' onClick={e => handelReplay(e, index)}>Comment</button>\n                        </div>\n                        <h3>Comments </h3>\n                        {\n                            item.comments?.map((m, i) => (\n                                <p key={i}>{m}</p>\n                            ))\n                        }\n                    </div>\n                </div>\n            )}\n\n        </div>\n    );\n}\n\nexport default Post;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import './style.css'\n\n// const Table = ({ data, header }) => {\n\n//     return (\n//         <div>\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         {header.map((title, index) => (\n//                             <th key={index}>{title}</th>\n//                         ))}\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {data.map((item, idex) =>\n//                         <tr key={idex}>\n//                             <td>{item.subject}</td>\n//                             <td>{item.discription}</td>\n//                             <td>{item.date}</td>\n//                         </tr>\n//                     )}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// }\n\n// export default Table;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}